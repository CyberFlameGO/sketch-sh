name: Build and deploy

on: [push]

jobs:
  deploy:
    environment: Production
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    # needs: build
    steps:
      - name: Checkout master
        uses: actions/checkout@v1
      - name: Set environment variables
        run: |
          REPOSITORY=$(echo $GITHUB_REPOSITORY | tr '[A-Z]' '[a-z]')
          echo AUTH_IMAGE=docker.pkg.github.com/${REPOSITORY}/auth:${GITHUB_SHA} >> $GITHUB_ENV
          echo MIGRATION_IMAGE=docker.pkg.github.com/${REPOSITORY}/migration:${GITHUB_SHA} >> $GITHUB_ENV
          echo NGINX_IMAGE=docker.pkg.github.com/${REPOSITORY}/nginx:${GITHUB_SHA} >> $GITHUB_ENV
      - name: Add environment variables to .env
        run: |
          echo HASURA_ACCESS_KEY=${{ secrets.HASURA_ACCESS_KEY }} >> .env
          echo AUTH_GITHUB_CLIENT_ID=${{ secrets.AUTH_GITHUB_CLIENT_ID }} >> .env
          echo AUTH_GITHUB_CLIENT_SECRET=${{ secrets.AUTH_GITHUB_CLIENT_SECRET }} >> .env
          echo AUTH_GITHUB_CALLBACK_URL=${{ secrets.AUTH_GITHUB_CALLBACK_URL }} >> .env
          echo AUTH_URL=${{ secrets.AUTH_URL }} >> .env
          echo FRONTEND_URL=${{ secrets.FRONTEND_URL }} >> .env
          echo JWT_TOKEN=${{ secrets.JWT_TOKEN }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo WEB_IMAGE=${{ env.WEB_IMAGE }} >> .env
          echo MIGRATION_IMAGE=${{ env.MIGRATION_IMAGE }} >> .env
          echo NGINX_IMAGE=${{ env.NGINX_IMAGE }} >> .env
      - name: Add the private SSH key to the ssh-agent
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-add - <<< "${{ secrets.DIGITAL_OCEAN_KEY }}"
      - name: Build and deploy images on DigitalOcean
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          scp -o StrictHostKeyChecking=no -r ./.env ./docker-compose.yml ./docker-compose.prod.yml ${{ secrets.DIGITAL_OCEAN_USER }}@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}:app
          ssh -o StrictHostKeyChecking=no ${{ secrets.DIGITAL_OCEAN_USER }}@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }} << 'ENDSSH'
            cd app
            source .env
            echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
            docker pull ${AUTH_IMAGE}
            docker pull ${MIGRATION_IMAGE}
            docker pull ${NGINX_IMAGE}
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
          ENDSSH